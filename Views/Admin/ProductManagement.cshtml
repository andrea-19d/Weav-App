@model Weav_App.Models.ViewsModel.ProductManagementViewModel
@{
    ViewData["Title"] = "Product Management";
    Layout = "Admin/_AdminLayout";
}
<!-- Stats Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="stats-card">
            <div class="stats-icon icon-products">
                <img src="/Admin/icons/image 4.png" alt="Products Icon" style="width: 32px; height: 32px;" />
            </div>
            <h6 class="text-muted mb-1">Total Products</h6>
            <h3 class="mb-0 fw-bold">@Model.Stats.TotalProducts</h3>
        </div>

    </div>
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="stats-card">
            <div class="stats-icon icon-categories">
                <img src="/Admin/icons/categories.png" alt="Categories Icon" style="width: 32px; height: 32px;" />
            </div>
            <h6 class="text-muted mb-1">Categories</h6>
            <h3 class="mb-0 fw-bold">@Model.Stats.TotalCategory</h3>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="stats-card">
            <div class="stats-icon icon-orders">
                <img src="/Admin/icons/low-price.png" alt="LowStock Icon" style="width: 32px; height: 32px;" />
            </div>
            <h6 class="text-muted mb-1">Low Stock</h6>
            <h3 class="mb-0 fw-bold">@Model.Stats.LowStock</h3>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="stats-card">
            <div class="stats-icon icon-revenue">
                <img src="/Admin/icons/deactivate.png" alt="Deactivated Icon" style="width: 32px; height: 32px;" />
            </div>
            <h6 class="text-muted mb-1">Inactive</h6>
            <h3 class="mb-0 fw-bold">@Model.Stats.Inactive</h3>
        </div>
    </div>
</div>

<!-- Filter Bar -->
<form method="get" asp-controller="Admin" asp-action="ProductManagement">
    <div class="filter-bar mb-4">
        <div class="row align-items-center">
            <div class="col-md-4">
                <div class="search-input">
                    <iconify-icon icon="mdi:magnify"></iconify-icon>
                    <input type="text" name="searchQuery" class="form-control" placeholder="Search products..."
                           value="@Model.Filter.SearchQuery">
                </div>
            </div>
            <div class="col-md-2">
                <select class="form-select" name="selectedCategory" onchange="this.form.submit()">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Filter.Category)
                    {
                        <option value="@category" selected="@(Model.Filter.SelectedCategory == category)">
                            @category
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select" name="status">
                    <option value="">All Status</option>
                    <option value="active">Active</option>
                    <option value="inactive">Inactive</option>
                    <option value="low-stock">Low Stock</option>
                </select>
            </div>
            <div class="col-md-4 text-end">
                <button type="submit" class="btn btn-outline-primary me-2">
                    <iconify-icon icon="mdi:export" class="me-1"></iconify-icon>
                    Filter
                </button>
                <button type="button" class="btn btn-outline-primary">
                    <iconify-icon icon="mdi:import" class="me-1"></iconify-icon>
                    Import
                </button>
            </div>
        </div>
    </div>
</form>



<!-- Products Table -->
<div class="product-card">
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
            <tr>
                <th scope="col">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="selectAll">
                    </div>
                </th>
                <th scope="col">Product</th>
                <th scope="col">Category</th>
                <th scope="col">Price</th>
                <th scope="col">Stock</th>
                <th scope="col">Status</th>
                <th scope="col">Rating</th>
                <th scope="col">Actions</th>
            </tr>
            </thead>
            <tbody id="productsTableBody">
            @foreach (var product in Model.Products.Take(10))
            {
                <tr>
                    <td>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox"/>
                        </div>
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="product-image me-3">
                                <img src="@product.ImageUrl" alt="Product" class="img-cover"/>
                            </div>

                            <div>
                                <h6 class="mb-0 fw-bold">@product.ProductName</h6>
                                <h6 class="mb-0 fw-bold">@product.CategoryId</h6>
                                <small class="text-muted">@product.Brand</small>
                            </div>
                        </div>
                    </td>
                    <td><span class="badge bg-light text-dark">@product.ProductCategory</span></td>

                    <td class="fw-bold">@product.ProductPrice</td>
                    <td>@product.Quantity</td>
                    <td>
                        @{
                            var status = product.Quantity == 0 ? "Inactive" :
                                product.Quantity < 10 ? "Low Stock" : "Active";
                            var statusClass = status == "Inactive" ? "status-inactive" :
                                status == "Low Stock" ? "status-low-stock" : "status-active";
                        }
                        <span class="status-badge @statusClass">@status</span>
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <iconify-icon icon="mdi:star" style="color: #ffc107;"></iconify-icon>
                            <span class="ms-1 fw-bold">4.5</span>
                            <!-- Replace with actual rating if you have -->
                        </div>
                    </td>
                    <td>
                        <button class="action-btn btn-view me-1"
                                data-bs-toggle="modal"
                                data-bs-target="#productModal"
                                data-id="@product.ProductId"
                                data-name="@product.ProductName"
                                data-brand="@product.Brand"
                                data-category="@product.ProductCategory"
                                data-category-id="@product.CategoryId"
                                data-price="@product.ProductPrice"
                                data-stock="@product.Quantity"
                                data-description="@product.ProductDescription"
                                data-expiry="@product.ExpiryDate.ToString("MM/dd/yyyy")"
                                data-barcode="@product.Barcode">
                            <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href="#eye"></use></svg>
                        </button>
                        <button class="action-btn btn-edit me-1"
                                title="Edit"
                                data-bs-toggle="modal"
                                data-bs-target="#editProductModal"
                                data-id="@product.ProductId"
                                data-name="@product.ProductName"
                                data-brand="@product.Brand"
                                data-category="@product.ProductCategory"
                                data-category-id="@product.CategoryId"
                                data-price="@product.ProductPrice"
                                data-stock="@product.Quantity"
                                data-description="@product.ProductDescription"
                                data-expiry="@product.ExpiryDate.ToString("MM/dd/yyyy")"
                                data-imageUrl="@product.ImageUrl"
                                data-barcode="@product.Barcode">
                            <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href="#edit"></use></svg>
                        </button>
                        <form method="post" asp-controller="Product" asp-action="DeleteProducts" asp-route-id="@product.ProductId" class="d-inline">
                            <button class="action-btn btn-delete" title="Delete" onclick="return confirm('Are you sure?')">
                                <svg width="24" height="24" viewBox="0 0 24 24">
                                    <use xlink:href="#trash"></use>
                                </svg>
                            </button>
                        </form>
                    </td>
                </tr>
            }
            </tbody>

        </table>
    </div>

    @await Html.PartialAsync("Components/Modals/EditProductModal")
    @await Html.PartialAsync("Components/Modals/ViewModalProducts")
    @await Html.PartialAsync("Components/Notifications/Notification")

    <!-- Pagination -->
    <nav aria-label="Products pagination" class="mt-4 p-3">
        <ul class="pagination pagination-sm justify-content-center">
            <li class="page-item @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.Pagination.CurrentPage - 1)">Previous</a>
            </li>

            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?page=@i">@i</a>
                </li>
            }

            <li class="page-item @(Model.Pagination.CurrentPage == Model.Pagination.TotalPages ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.Pagination.CurrentPage + 1)">Next</a>
            </li>
        </ul>
    </nav>
</div>



@{
    if (ViewBag.ShowDialog != null && ViewBag.ShowDialog == true)
    {
        <script type="text/javascript">
                $(function () {
                    $("#aModal").modal('show');
                })
            </script>
    }
}

<script>
    const productModal = document.getElementById('productModal');
    const editProductModal = document.getElementById('editProductModal');
    
    productModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        
        document.getElementById('modal-product-id').textContent = button.getAttribute('data-id');
        document.getElementById('modal-product-name').textContent = button.getAttribute('data-name') || 'No name data';
        document.getElementById('modal-product-brand').textContent = button.getAttribute('data-brand') || 'No brand data';
        document.getElementById('modal-product-category').textContent = button.getAttribute('data-category') || 'No category data';
        document.getElementById('modal-product-price').textContent = button.getAttribute('data-price') || 'No price data';
        document.getElementById('modal-product-stock').textContent = button.getAttribute('data-stock') || 'No stock data';
        document.getElementById('modal-product-description').textContent = button.getAttribute('data-description') || 'No description';
        document.getElementById('modal-product-expiry-date').textContent = button.getAttribute('data-expiry-date') || 'No expiry date';
        document.getElementById('modal-product-barcode').textContent = button.getAttribute('data-barcode') || 'No barcode data';
    });

    editProductModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;

        const expiry = button.getAttribute('data-expiry');
        document.getElementById('edit-product-expiry-date').value = expiry || '';

        // Fill in form values
        document.getElementById('edit-product-id').value = button.getAttribute('data-id');
        document.getElementById('edit-product-name').value = button.getAttribute('data-name') || 'No name data';
        document.getElementById('edit-product-brand').value = button.getAttribute('data-brand')|| 'No brand data';
        document.getElementById('edit-product-category').value = button.getAttribute('data-category') || 'No category data';
        document.getElementById('edit-product-category-id').value = button.getAttribute('data-category-id') || 'No category id data';
        document.getElementById('edit-product-price').value = button.getAttribute('data-price') || 'No price data';
        document.getElementById('edit-product-stock').value = button.getAttribute('data-stock') || 'No stock data';
        document.getElementById('edit-product-description').value = button.getAttribute('data-description') || 'No description';
        document.getElementById('edit-product-expiry-date').value = button.getAttribute('data-expiry') || 'No expiry date';
        document.getElementById('edit-product-barcode').value = button.getAttribute('data-barcode')|| 'No barcode data';

        const imageUrl = button.getAttribute('data-imageUrl');
        document.getElementById('preview').src = imageUrl || '';
        document.getElementById('existingImageUrl').value = imageUrl || '';
    });
</script>
